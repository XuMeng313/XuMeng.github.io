<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白日梦想录</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-20T12:19:10.535Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>续梦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>post</title>
    <link href="http://example.com/2022/12/20/408-%E8%AE%A1%E7%BD%91-6/"/>
    <id>http://example.com/2022/12/20/408-%E8%AE%A1%E7%BD%91-6/</id>
    <published>2022-12-20T12:19:10.000Z</published>
    <updated>2022-12-20T12:19:10.535Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络(第四章)</title>
    <link href="http://example.com/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/"/>
    <id>http://example.com/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/</id>
    <published>2022-12-20T12:18:48.000Z</published>
    <updated>2022-12-20T12:21:47.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="4-1网络层概述"><a href="#4-1网络层概述" class="headerlink" title="4.1网络层概述"></a>4.1网络层概述</h3><p>主要任务-<strong>实现网络互连</strong>进而<strong>实现数据包在个网络之间的传输</strong></p><h3 id="4-2网络层提供的服务"><a href="#4-2网络层提供的服务" class="headerlink" title="4.2网络层提供的服务"></a>4.2网络层提供的服务</h3><p><img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/image-20221216163751712.png" alt="image-20221216163751712"></p><h3 id="4-3IPv4"><a href="#4-3IPv4" class="headerlink" title="4.3IPv4"></a>4.3IPv4</h3><p>IPv4地址是每台主机的每一个接口的<strong>唯一的32比特的标识符</strong>，采用<strong>点分十进制</strong>表示方法—每八位分成一组，每组转化为十进制，组与组之间用点分割。</p><p>除二取余法：将十进制每一次除2，记录余数，余数串反过来就是二进制数</p><p>不同类别IPv4地址：A类(八位网络号固定首位0，24位主机号)、B类(16位网络号固定首位10，16位主机号)、C类(24位网络号固定首位110，9位主机号)、D类(固定首位1110，多播地址)、E类(固定首位1111，保留号)，只有ABC类而分配给主机路由器</p><p>总结：小于127为A类，128~191为B类，192~223为C类，三种情况不能指派：1.A类网络号0和127；2.主机号为全0，这是网络地址；3，主机号为全1，这是广播地址</p><p><img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/image-20221216170713858.png" alt="image-20221216170713858"></p><p>32比特二点子网掩码可以表明分类IP地址的主机号部分 用了几个比特作为子网号。子网掩码用连续的比特1对应网络号和子网号</p><p>默认子网掩码是指在为划分子网的情况下使用的子网掩码—总结为每一类主机号全为0</p><p><strong>无分类编址</strong>来结局IP紧张问题，<strong>无分类域间路由选择CIDR</strong>—消除了传统ABC类地址以及划分子网的概念，可以更有效地分配IPv4地址空间。CIDR使用斜线记法，在斜线后面写上网络前缀所占的比特数量</p><p>路由聚合(构造超网)-网络前缀越长，地址块越小路由越具体。 方法-找共同前缀。</p><p> IPv4的应用规划—定长的子网掩码FLSM（使用同一个子网掩码来划分子网，子网划分方式不灵活：只能划分出2的n次方个子网，每个子网分配IP地址数量相同容易浪费）2.变长的子网掩码VLSM（使用不同子网掩码来划分子网，可以按需分配，每个子网分配的IP地址数量可以不同，减少浪费)</p><h3 id="4-4-IP数据报的发送和转发过程"><a href="#4-4-IP数据报的发送和转发过程" class="headerlink" title="4.4 IP数据报的发送和转发过程"></a>4.4 IP数据报的发送和转发过程</h3><p><strong>主机发送IP数据报</strong>-判断目的主机是否与自己在同一个网络，若在同一网络，属于<strong>直接交付</strong>；否则属于<strong>间接交付</strong>，传输给主机所在网络的默认网关。</p><p><strong>路由器转发IP数据包</strong>-1.检查IP数据报首部是否出错，出错直接丢弃并报告源主机；2.根据IP数据报的目的地址在路由表中查找匹配的条目，找到则转发给条目中指示的吓一跳，否则丢弃并报告。</p><h3 id="4-5静态路由配置及其可能产生的路由环路问题"><a href="#4-5静态路由配置及其可能产生的路由环路问题" class="headerlink" title="4.5静态路由配置及其可能产生的路由环路问题"></a>4.5静态路由配置及其可能产生的路由环路问题</h3><p>静态路由配置指用户或网络管理员使用路由器的相关命令给路由器<strong>人工配置路由表</strong>，方式简单开销小，但不能即使适应网络状态（流量、拓扑等）的变化。</p><p>网络故障、 聚合了不存在的网络、配置错误会导致产生路由环路的错误</p><p>路由条目类型—直连网络、静态路由(人工配置)、动态路由(路由选择协议)</p><p>特殊的静态路由条目—默认理由(目的网络为0.0.0.0，地址掩码为0.0.0.0)、特定主机路由(目的网络为特定主机的IP地址，地址掩码为255.255.255.255)、黑洞路由(下一跳为null0)</p><h3 id="4-6路由选择协议"><a href="#4-6路由选择协议" class="headerlink" title="4.6路由选择协议"></a>4.6路由选择协议</h3><p>因特网采用路由选择协议特点：自适应、分布式、分层次</p><p>路由信息协议RIP—使用跳数来衡量到达目的网络的距离，<strong>等于16时相当于不可达</strong>，只适用于小型互联网。RIP认为好路由是所通过路由器数量最少的路由。更新规则如下：<img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/image-20221218152902345.png" alt="image-20221218152902345">RIP存在坏消息传播慢的问题。</p><p>开放最短路径优先OSPF—使用迪杰斯特拉最短路径算法，基于链路状态不会产生路由环路，不限制网络规模收敛速度快。通过交互问候分组建立邻居关系 <img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/image-20221218155100982.png" alt="image-20221218155100982" style="zoom: 150%;"></p><p>边界网关协议BGP<img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/image-20221218161541787.png" alt="image-20221218161541787"></p><h3 id="4-7-IPv4数据报首部格式"><a href="#4-7-IPv4数据报首部格式" class="headerlink" title="4.7 IPv4数据报首部格式"></a>4.7 IPv4数据报首部格式</h3><p>内容还挺多的，<img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-4/image-20221218164546610.png" alt="image-20221218164546610"></p><p>具体复习看<a href="https://blog.csdn.net/m0_47988201/article/details/122895189?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167135313616800192245955%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167135313616800192245955&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-4-122895189-null-null.142^v68^control,201^v4^add_ask,213^v2^t3_esquery_v2&amp;utm_term=IPv4%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F&amp;spm=1018.2226.3001.4187">大佬总结</a>吧</p><h3 id="4-8-网际控制报文协议ICMP"><a href="#4-8-网际控制报文协议ICMP" class="headerlink" title="4.8 网际控制报文协议ICMP"></a>4.8 网际控制报文协议ICMP</h3><p>主机或路由器使用ICMP发送<strong>差错报告报文</strong>和<strong>询问报文</strong>，ICMP被封装在IP数据报中发送。<br>差错报告报文—1.终点不可达 2.源点抑制 3.时间超过 4.参数问题 5.改变路由(重定向)<br>不发送差错报告报文的的情况：1.对ICMP差错报文不发送2.对第一个分片的数据报片的所有后续数据报片不发送3.对具有多播地址的数据报不发送4.对具有特殊地址（如127.0.0.0或0.0.0.0）的数据包不发送<br>ICMP询问报文—回送请求和回答、时间戳请求和回答<br>ICMP应用—分组网间探测PING、跟踪路由traceroute</p><h3 id="4-9虚拟专用网VPN与网络地址转换NAT"><a href="#4-9虚拟专用网VPN与网络地址转换NAT" class="headerlink" title="4.9虚拟专用网VPN与网络地址转换NAT"></a>4.9虚拟专用网VPN与网络地址转换NAT</h3><p><strong>VPN—利用公网的因特网作为本机构各专用网之间的通信载体</strong>；同意机构不同部门的内部网络构成VPN称为<strong>内联网VPN</strong>，有时一个机构VPN需要某些外部机构参加进来这样的叫做<strong>外联网VPN</strong>；VPN要保证传输数据的安全性，会将原始的内部数据进行加密，在将其封装成为在因特网上发送到外部的数据报。</p><p>NAT—是<strong>应用大量内部专用地址的专用网络用户共享少量外部全球地址</strong>来访问因特网上的主机和资源以此缓解IP地址空间耗尽的问题。利用<strong>运输层端口号和IP地址一起进行转换</strong>使一个全球IP地址使多个拥有本地地址的主机同时和因特网上的主机通信，这种转换技术叫网络地址与端口号转换NAPT(类似不同小孩抢一个手机玩)，因此<strong>外网主动与内网主机进行通信时遇到NAT会出现问题</strong>，这也带来了一定安全性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第四章&quot;&gt;&lt;a href=&quot;#第四章&quot; class=&quot;headerlink&quot; title=&quot;第四章&quot;&gt;&lt;/a&gt;第四章&lt;/h2&gt;&lt;h3 id=&quot;4-1网络层概述&quot;&gt;&lt;a href=&quot;#4-1网络层概述&quot; class=&quot;headerlink&quot; title=&quot;4.1网络</summary>
      
    
    
    
    <category term="考研复习" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%A4%8D%E4%B9%A0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(第五章)</title>
    <link href="http://example.com/2022/12/20/408-%E8%AE%A1%E7%BD%91-5/"/>
    <id>http://example.com/2022/12/20/408-%E8%AE%A1%E7%BD%91-5/</id>
    <published>2022-12-20T12:18:48.000Z</published>
    <updated>2022-12-20T12:23:15.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="5-1运输层概述"><a href="#5-1运输层概述" class="headerlink" title="5.1运输层概述"></a>5.1运输层概述</h3><p>如何为运行在不同主机上的应用进程提供直接的通信服务时运输层的任务，运输层直接为应用进程间的逻辑通信提供服务。</p><h3 id="5-2运输层端口号、复用与分用的概念"><a href="#5-2运输层端口号、复用与分用的概念" class="headerlink" title="5.2运输层端口号、复用与分用的概念"></a>5.2运输层端口号、复用与分用的概念</h3><p>运行在计算机的进程使用<strong>进程标识符PID标记</strong>，不同操作系统不同格式进程标识符，为了不同操作系统进程之间通信必须使用<strong>统一方法对 TCP/IP体系的应用进程标识。</strong><br>TCP/IP体系运输层使用<strong>端口号</strong>来区分不同进程-端口号使用16比特表示，取值范围0~65535；<strong>端口号只有本地意义，即只是为了表示本计算机应用层的各进程，不同计算机的相通端口号没有联系。</strong><br>发送方复用和接收方分用—UDP和TCP都得封装为IP<img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-5/image-20221219152354194.png" alt="image-20221219152354194"></p><p>常用协议熟知端口号<img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-5/image-20221219152500645.png" alt="image-20221219152500645"></p><h3 id="5-3UDP和TCP对比"><a href="#5-3UDP和TCP对比" class="headerlink" title="5.3UDP和TCP对比"></a>5.3UDP和TCP对比</h3><p>UDP—用户数据报协议，无需连接，支持单薄，多播及广播；面向应用报文的；提供无连接不可靠传输服务(适用于实时应用)；首部仅有八字节</p><p>TCP—传输控制协议，面向连接，只支持单播；面向字节流的；提供面向连接的可靠服务(适用于要求可靠的服务)；首部最小20字节最大60字节。</p><h3 id="5-4-TCP流量控制"><a href="#5-4-TCP流量控制" class="headerlink" title="5.4 TCP流量控制"></a>5.4 TCP流量控制</h3><p>流量控制-让发送方的发送频率不要太块，要让接收方来得及接收</p><p> 利用滑动窗口来实现流量控制—TCP利用自己<strong>接收窗口</strong>大小来限制发送方发送窗口大；发送方接收到<strong>零窗口通知</strong>后启动<strong>持续计时器</strong>，计时器超时向接收方发送<strong>零窗口探测报文</strong>。</p><h3 id="5-5-TCP的拥塞控制"><a href="#5-5-TCP的拥塞控制" class="headerlink" title="5.5 TCP的拥塞控制"></a>5.5 TCP的拥塞控制</h3><p>拥塞—在某段时间对网络某i资源的需求超过了该资源所能提供的可用部分，网络性能就会变坏。出现拥塞而不控制会导致整个网络吞吐量随输入负荷的增大而下降。使用满开始、拥塞避免、快重传和快恢复四种算法解决。</p><p>发送方维护一个拥塞窗口cwnd的状态变量，值为网络拥塞程度，动态变化。<strong>维护原则</strong>：只要没出现拥塞，拥塞窗口就大一点，出现拥塞，窗口就减少一点；<strong>判断拥塞出现依据</strong>：发生超时重传；<strong>发送方将拥塞窗口作为发送窗口swnd</strong>。</p><p>当维护一个慢开始门限ssthresh状态变量：</p><ul><li>当cwnd小于ssthresh，使用慢开始算法；大于时停止慢开始采用拥塞避免算法；等于时可以任意使用二者之一。</li></ul><p>慢开始算法-每个传输轮次结束后拥塞窗口逐渐加大，不断×2</p><p>拥塞避免算法-每次拥塞窗口线性加一，每当重传计时器超时时，ssthresh更新为cwnd值的一半，cwnd值减少为1并重新开始慢开始算法。</p><p>为了避免个别报文段丢失而导致误判拥塞造成降低传输效率，快重传算法可以让发送方尽早知道个别报文段丢失。快重传—<strong>发送方尽快重传</strong>而不是等超时计时器超是再重传：要求接收方<strong>立即发送确认</strong>，即使收到失序报文段也要发出对已收到的报文段的<strong>重复确认</strong>，发送方一旦收到<strong>三个连续重复确认</strong>则将相应报文段<strong>立即重传</strong>。</p><p>发送方一旦收到三个确认重复，便不启动慢开始算法而是执行快恢复算法—发送方将慢开始门限值和cwnd值调整为当前窗口的一半，开始执行拥塞避免算法。</p><h3 id="5-6-TCP超时重传时间选择"><a href="#5-6-TCP超时重传时间选择" class="headerlink" title="5.6 TCP超时重传时间选择"></a>5.6 TCP超时重传时间选择</h3><p>超时重传时间RTO理论上应略大于往返时间RTT，但是有很多情况要考虑所以不能一概而论。</p><p>RFC6298建议使用下式计算RTO：</p><p><img src="/2022/12/20/408-%E8%AE%A1%E7%BD%91-5/image-20221219170825674.png" alt="image-20221219170825674"></p><p>  <strong>出现超时重传时，新RTO值为2倍旧RTO值</strong></p><h3 id="5-7-TCP可靠传输实现"><a href="#5-7-TCP可靠传输实现" class="headerlink" title="5.7 TCP可靠传输实现"></a>5.7 TCP可靠传输实现</h3><p>TCP基于以字节为单位的滑动窗口来实现可靠传输。</p><p>发送方的发送窗口并不总是和接收方的接收窗口一样大，对于不按序到达的数据TCP会先临时存放再接收窗口中，在按序交付上层应用进程。</p><p>TCP要求接收方必须有累计确认和捎带确认机制，接收方不应过分推迟发送确认</p><p>TCP通信是全双工通信。</p><h3 id="5-8TCP的余数连接管理"><a href="#5-8TCP的余数连接管理" class="headerlink" title="5.8TCP的余数连接管理"></a>5.8TCP的余数连接管理</h3><p>TCP运输连接三阶段—1.建立TCP连接 2.数据传输 3.释放TCP连接</p><p><strong>TCP三次握手</strong>建立连接—客户端发送TCP连接请求(SYN=1,seq=x)；服务器收到后发送针对TCP连接请求的确认（SYN =1 ACK =1 seq =y ack =x+1）；客户端收到后发送针对TCP连接请求的确认的确认 ACK =1 seq =x+1 ack =y+1），完成连接的建立开始传输数据。为了防止已失效的连接请求报文段突然又传送到了TCP服务器而导致错误，因此三次握手是必须的。</p><p><strong>TCP四次握手</strong>释放连接—客户端发送TCP连接释放(FIN =1 ACK =1 seq= u  ack =v) 服务器收到后发送TCP普通确认(ACK =1  seq =v ack =u+1) 然后通知应用进程，被动关闭后服务器发送TCP连接释放(FIN =1 ACK =1 seq =w  ack =u+1) 客户端收到后发送TCP普通确认(ACK=1 seq =u+1 ack=w+1) 并在等待2MSL后关闭，服务器收到后关闭。 MSL—最长报文段寿命，RFC793建议为2分钟</p><p> TCP服务器进程每收到一次TCP客户进程的数据就重新设置并启动<strong>保活计时器</strong>(2小时定时)。若保活定时器周期内未收到TCP客户进程发来的数据，则<strong>当保活计时器到时后，TCP服务器进程向TCP客户进程发送一个探测报文段</strong>，后每75秒发送一次，若发送10个后仍无响应则服务器认为客户进程主机出现故障便关闭连接。</p><h3 id="5-9TCP报文段首部格式"><a href="#5-9TCP报文段首部格式" class="headerlink" title="5.9TCP报文段首部格式"></a>5.9TCP报文段首部格式</h3><p>TCP报文段由<strong>首部</strong>和<strong>数据载荷</strong>构成  </p><p><a href="https://www.jianshu.com/p/a19c336c5114">具体格式</a>查看大佬的文章</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第五章&quot;&gt;&lt;a href=&quot;#第五章&quot; class=&quot;headerlink&quot; title=&quot;第五章&quot;&gt;&lt;/a&gt;第五章&lt;/h2&gt;&lt;h3 id=&quot;5-1运输层概述&quot;&gt;&lt;a href=&quot;#5-1运输层概述&quot; class=&quot;headerlink&quot; title=&quot;5.1运输</summary>
      
    
    
    
    <category term="考研复习" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%A4%8D%E4%B9%A0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(第三章)</title>
    <link href="http://example.com/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/"/>
    <id>http://example.com/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/</id>
    <published>2022-12-16T09:34:32.000Z</published>
    <updated>2022-12-16T09:38:22.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="3-1-数据链路层概述"><a href="#3-1-数据链路层概述" class="headerlink" title="3.1 数据链路层概述"></a>3.1 数据链路层概述</h3><p>链路-从一个结点到相邻结点的一段物理线路，中间没有任何其他交换结点</p><p>数据链路-把实现通信协议的硬件和软件加到链路上</p><p>数据链路层以帧为单位传输和处理数据</p><p>三个重要问题：封装成帧、差错检测、可靠传输-实现发送方发什么，接收方就能收到什么称为可靠传输</p><h3 id="3-2-封装成帧"><a href="#3-2-封装成帧" class="headerlink" title="3.2 封装成帧"></a>3.2 封装成帧</h3><p>封装成帧是指数据链路层给上层交付的协议数据单位添加帧头和帧尾使之成为帧。帧头和帧尾包含有重要的控制信息，作用之一是帧定界。</p><p>透明传输-<strong>数据链路层对上层交付的传输数据没有任何限制</strong></p><p>为了提高传输效率应使帧的数据部分长度尽可能大些，每种数据链路层协议都规定了帧的数据部分的长度上限</p><h3 id="3-3差错检测"><a href="#3-3差错检测" class="headerlink" title="3.3差错检测"></a>3.3差错检测</h3><p>比特传输出现差错：1变为0，0变为1是<strong>比特差错</strong></p><p><strong>误码率BER</strong>-在一段时间内，传输错误的比特占传输比特总数的比率</p><p>奇偶校验-在待发数据后面添加一位奇偶校验位，是整个数据(包括所添加的校验位在内)中‘1’的个数位奇数(奇校验)或偶数(偶校验)，如果有<strong>奇数</strong>个位发生误码，会导致<strong>奇偶性发生变化</strong>，表示出现误码，偶数个位不能检查出误码</p><p>循环冗余校验CRC-收发双方约定好一个生成多项式G(x)；发送方基于带发送数据和生成多项式计算出差错检测码<strong>(冗余码)</strong>,将其添加到待传输数据的后面一起传输；接收方通过生成多项式来计算1收到的数据是否产生了误码。</p><p><img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221212162457637.png" alt="image-20221212162457637"></p><p>计算方法：1.<strong>构造被除数</strong>-待发送信息后面添加生成多项式最高次数个0；2.<strong>构造除数</strong>-生成多项式系数构成的比特串；3.做除法(进行二进制异或运算)；4.检查余数-余数位数与生成多项式最高次数相同，若位数不够则在前面补0</p><h3 id="3-4可靠传输的基本概念"><a href="#3-4可靠传输的基本概念" class="headerlink" title="3.4可靠传输的基本概念"></a>3.4可靠传输的基本概念</h3><p>FCS字段-检错码</p><p>不可靠传输服务-检测到误码时仅仅丢弃有误码的帧</p><p>可靠传输服务-想办法实现发送端发送什么，接收端就收到什么</p><p>从整个计网体系来看，传输差错还包括<strong>分组差错、分组失序和分组重复</strong></p><p>可靠传输服务不局限于数据链路层：网际层-IP向上层提供无连接、不可靠传输服务，运输层-TCP提供面向连接的可靠服务，UDP提供无连接不可靠传输服务</p><h3 id="3-5可靠传输的实现机制"><a href="#3-5可靠传输的实现机制" class="headerlink" title="3.5可靠传输的实现机制"></a>3.5可靠传输的实现机制</h3><p><strong>停止-等待协议SW</strong>：</p><p>1.为了避免发送方一直等待接收方ACK或NAK，启动超时计时器，到了重传时间则重传数据分组，称为<strong>超时重传</strong>。</p><p>2.为了<strong>避免分组重复</strong>，必须给每个分组带上序号,<strong>只需用一个比特编号</strong>表示和上次不同即可</p><p> 3.信道利用率U =Td(发送时延)/(Td+RTT(往返时间)+Ta),RTT远大于发送时延时信道利用率非常低</p><p><strong>回退N帧协议GBN</strong></p><p>1.概念：<strong>采用三个比特给分组编号，发送窗口尺寸Wt取值为1到2的三次方-1，接收窗口尺寸Wr为1.</strong>发送数据时发送窗口Wt个数据，到接收方按照每次Wr个接收,发送数据也将从Wt中依次减少并且删除缓存，下一批数据依次进入发送窗口，有点类似滑动窗口.</p><p>接收方不一定要对数据分组逐个发送确认，而是可以在<strong>收到几个数据分组后对按序到达的最有一个分组发送确认</strong>，ACKn表示序号为n及以前的所有数据已正确接收，即使确认分组丢失发送方也可能不必重传。</p><p>出现差错时，接收方抛弃所有数据，发送重复的ACKn，发送方收到后重新发送数据，实现回退n帧的效果。</p><p>发送窗口尺寸超过上限将导致接收方无法分辨新旧数据分组，导致分组重复</p><p><strong>选择重传协议SR</strong></p><p>接收窗口WR大于1，以便<strong>接收方先收下失序到达但无误码并且序号落在接收窗口的那些数据分组</strong>，等所缺分组收齐后再送交上层。为了是发送方仅重传出现差错的分组，接收方必须对每个正确接收到的数据分组逐一确认，只有再按序接收数据分组后接收窗口才能滑动。发送方类似未按序到达的确认分组要记录，防止超时重发。</p><h3 id="3-5点对点协议PPP"><a href="#3-5点对点协议PPP" class="headerlink" title="3.5点对点协议PPP"></a>3.5点对点协议PPP</h3><p>点对点协议时目前使用最广泛的点对点数据链路层协议</p><p> 帧格式<img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221213155341243.png" alt="image-20221213155341243"></p><p>透明传输—<strong>面向字节的异步链路**</strong>采用在数据部分插入转义字符的字节填充发，如发送数据中出现7D转为7E+5D，接收后再专回来；<strong>面对比特的同步链路**</strong>采用插入比特0的比特填充法，如发送方发现5个连续的比特1，则立刻填充1个比特0，发送方同理删除</p><p><img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221213155955174.png" alt="image-20221213155955174"></p><h3 id="3-6-媒体接入控制"><a href="#3-6-媒体接入控制" class="headerlink" title="3.6 媒体接入控制"></a>3.6 媒体接入控制</h3><p>基本概念-共享信道要着重考虑的一个问题就是如何协调多个发送和接收站点对一个共享传输媒体的占用，即媒体接入控制MAC</p><p>信道复用-复用就是通过一条物理线路同时传输多路用户的信号，当网络中传输媒体的传输容量大于读条单一信道传输的总通信量时，可利用复用技术在一条物理线路上建立多条通信信道来充分利用传输媒体的带宽。</p><p>频分复用FDM、时分复用TDM、波分复用WDM、码分复用CDM</p><p>码分复用中每一比特时间再划分为m个短的间隔称为码片，使用CDMA的每一个站被指派唯一一个的m bit码片序列，一个站如果要发送比特1就发送他自己的m bit码片序列，发送比特0则发送码片序列的反码。分配给每个站的码片序列必须各不相同，并且必须相互正交。</p><p>判断是否正交：<img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221213163554385.png" alt="image-20221213163554385"></p><p>CD协议——工作原理：动态接入控制—随机接入：<strong>多址接入MA</strong>-多个站连接在一条总线上竞争使用总线；<strong>载波监听CS</strong>-每个站在发送帧前检测总线上是否有其他站点在发生，空闲则发送，否则继续检测等待总线转为空闲96比特时间然后发送；<strong>碰撞检测CD</strong>每一个正在发送帧的站便发送边检测碰撞，发现出现碰撞理科停止发送，一段随机时间后再次发送。</p><p>CD协议——以太网的争用期：以太网端到端往返传播时延2ε称为争用期或碰撞窗口，过了争用期还没检测到碰撞则肯定不会发生碰撞；以太网发送帧的主机越多往返传播时延越大，碰撞概率越大，因此共享式以太网不能连接太多的主机，使用总线也不能太长。</p><p>CD协议——最小帧长-争用期×数据传播速率，对于10Mbps的传统以太网规定最小帧长为64字节即512比特(512比特时间即为争用期)，确保主机可在帧发送完之前就检测到该帧的发送过程中是否遭遇了碰撞；在争用期内检测到碰撞时发送的数据一定小于64字节，因此小于64字节的帧都是无效帧</p><p>CD协议——最大帧长依据协议不同</p><p>阶段二进制指数规避算法<img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221213173112887.png" alt="image-20221213173112887"></p><p>若多次发生碰撞表明较多主机参与竞争信道，利用规避算法可<strong>使重传需要推迟的平均时间随重传次数而增大</strong>（动态规避），因而减小发生碰撞的概率；当重传达16次仍不成功，说明打算发送帧主机太多，则抛弃该帧向高层报告</p><p>CD协议——信道利用率<img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221213173431285.png" alt="image-20221213173431285"></p><p>在无线局域网中，不能使用碰撞检测CD，因为对硬件要求非常高，并且由于无线电波传播的特殊性（存在隐蔽站问题），进行碰撞检测的意义也不大。因此802.11无线局域网使用CSMA/CA协议</p><p>由于不可能 避免所有碰撞，并且无线信道误码率较高，802.11标准还使用了数据链路层确认机制(停止-等待协议)</p><p>802.11的MAC层标准定义了两种媒体接入控制方式：分布式协调功能DCF，点协调功能PCF</p><p><strong>帧间间隔IFS</strong>-802.11规定所有站点必须在持续检测到信道空闲一段指定时间后才能发送帧；帧间间隔的长短取决于该站点要发送的帧的类型-高优先级帧需要等待的时间较短，低优先级帧等待时间长。常见帧间间隔如下-短帧间间隔SIFS(28us)，DCF帧间间隔DIFS（128us)</p><p>CSMA/CA<strong>工作原理</strong>（1）先检测信道（进行载波侦听）。（2）目的站若正确收到此帧，则经过时间间隔SIFS后，向源站发送确认帧ACK。（3）所有其他站都设置网络分配向量NAV，表明在这段时间内信道忙，不能发送数<br>据。（4）当确认帧ACK结束时，NAV（信道忙）也就结束了。在经历了帧间间隔之后，<br>接着会出现一段空闲时间，叫做争用窗口，表示在这段时间内有可能出现各站点争用信道<br>的情况。（5）争用信道比较复杂，因为有关站点要执行退避算法。</p><p>CSMA/CA<strong>退避算法</strong>-在有站点正在发送帧时，其他要发送的站点随机缠产生一段退避时间，退避时间内检测信道是否空闲，存在其他站点再次占用时则冻结剩余退避时间，直至退避时间结束并且信道空闲时发送。</p><p>CSMA/CA信道预约-802.11标准允许要发送数据站点对信道进行预约，即在发送数据帧之前先发送请求发送RTS帧，在收到响应允许发送CTS帧后，就可发送数据帧。</p><p>CSMA/CA虚拟载波监听-除RTS帧和CTS帧会携带通信需要持续的时间，数据帧也能携带通信需要持续的时间；利用虚拟载波监听机制，<strong>站点只要监听到RTS帧、CTS帧或数据帧中的任何一个，就能知到信道被占用的持续时间</strong>，因此能减少隐蔽站带来的碰撞问题。</p><h3 id="3-7-MAC地址、IP地址和ARP地址"><a href="#3-7-MAC地址、IP地址和ARP地址" class="headerlink" title="3.7 MAC地址、IP地址和ARP地址"></a>3.7 MAC地址、IP地址和ARP地址</h3><p>MAC地址式以太网的MAC子层所使用的地址，IP地址是TCP/IP体系结构网际层所使用的地址；ARP协议属于TCP/IP体系结构的网际层，作用是·一直设备分配的IP，使用ARP协议可以通过IP获取到设备MAC地址</p><p>每个主机发送的帧中必须携带标识发送主机和接受主机的地址即MAC地址（硬件地址）,严格来说MAC地址是对网络上个接口的唯一标识，而不是对网络上各设备的唯一标识。</p><p>MAC地址格式表示-六组十六进制</p><p>单播MAC地址-有发送方和接收方地址，广播MAC地址-只有发送方地址都能收到，多播MAC地址-首位十六进制不能整除2则为多播地址，拥有该多播组的接收方能收到，否则丢弃</p><p>IP地址-因特网上主机和路由器所使用的地址，用于标识网络编号和主机编号。在数据包转发过程中<strong>源IP地址和目的IP地址</strong>保持不变，<strong>源MAC地址和目的MAC地址随链路改变</strong>。</p><p>ARP协议-在发送数据前通过发送ARP报文广播获取接收方MAC地址和IP地址，只能在一段链路上或一个网络上使用，不能跨网络使用。</p><h3 id="3-8集线器与交换机"><a href="#3-8集线器与交换机" class="headerlink" title="3.8集线器与交换机"></a>3.8集线器与交换机</h3><p>使用集线器的以太网在逻辑上任是一个总线网，使用的还是CSMA/CD协议，集线器只在物理层工作，一般有少量的容错能力和网络管理能力</p><p>使用集线器HUB可以在物理层扩展以太网</p><p>以太网交换机有多个接口，一般以全双工方式工作，能同时联通多对几口是多对主机能同时通信，无碰撞（不适用CSMA/cd协议）。以太网交换机工作在数据链路层，受到帧后再帧交换表中查询帧的目的MAC地址对应接口好，然后转发该帧。帧的两种转发方式：存储转发，直通转发 。</p><p>区别：集线器单播帧会发给所有主机，交换机只会发给目的主机；两个主机同时发送数据时集线器会产生碰撞再将碰撞提示发送给其他主机，交换机会缓存数据再发送。扩展后结果也差不多，因此交换机可以隔离碰撞域，集线器会扩大碰撞域。</p><h3 id="3-9以太网交换机自学习和转发帧流程"><a href="#3-9以太网交换机自学习和转发帧流程" class="headerlink" title="3.9以太网交换机自学习和转发帧流程"></a>3.9以太网交换机自学习和转发帧流程</h3><p>因为MAC地址与交换机接口对应关系不是永久的，所以交换机表会定期删除已学习的记录</p><p>学习过程<img src="/2022/12/16/408-%E8%AE%A1%E7%BD%91-3/image-20221215161428831.png" alt="image-20221215161428831"></p><h3 id="3-10以太网交换机的生成树协议STP"><a href="#3-10以太网交换机的生成树协议STP" class="headerlink" title="3.10以太网交换机的生成树协议STP"></a>3.10以太网交换机的生成树协议STP</h3><p> 添加冗余链路可以提高以太网可靠性，但是也会形成网络环路引起广播风暴、主机收到重复广播帧、交换机的帧交换表震荡</p><p>因此使用生成树协议STP来避免网络环路的问题，交换机能自动计算并构建一个逻辑上没有闭环的网络，并且确保连接整个网络，当物理拓扑发生变化时，交换机都将进行生成树的重新计算。</p><h3 id="3-11虚拟局域网VLAN"><a href="#3-11虚拟局域网VLAN" class="headerlink" title="3.11虚拟局域网VLAN"></a>3.11虚拟局域网VLAN</h3><p>使用一个或多个以太网交换机互连起来的交换式以太网，其所有站点都属于一个广播域，广播域过大会引起广播风暴(发送ARP广播请求时会像所有主机发送导致浪费网络资源和个主机CPU资源)，难以管理和维护，潜在的安全问题。</p><p>分割广播域的方法-使用路由器分割</p><p>虚拟局域网VLAN是一种将局域网内设备划分成与物理位置无关的逻辑组技术，这些逻辑组有某些共同的需求。</p><p>IEEE 802.1Q帧对以太网MAC帧格式进行了扩展，插入了4字节的VLAN标记。VLAN标记<strong>最后12比特</strong>称为<strong>VLAN标识符VID</strong>(标记了以太网帧属于哪一个VLAN)，有效值为1~4094，802.1Q帧是由交换机来处理的，而不是用户主机来处理，收到<strong>普通以太网</strong>帧时会插入4字节VLAN标记转变为802.1Q帧，简称<strong>打标签</strong>。转发是删除VLAN标记</p><p>交换机端口类型-Access、Trunk、Hybrid</p><p>互联的Trunk端口PVID值不等，可能造成转发错误</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第三章&quot;&gt;&lt;a href=&quot;#第三章&quot; class=&quot;headerlink&quot; title=&quot;第三章&quot;&gt;&lt;/a&gt;第三章&lt;/h2&gt;&lt;h3 id=&quot;3-1-数据链路层概述&quot;&gt;&lt;a href=&quot;#3-1-数据链路层概述&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="考研复习" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%A4%8D%E4%B9%A0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网站合集</title>
    <link href="http://example.com/2022/12/13/%E5%AE%9D%E8%97%8F%E5%90%88%E9%9B%86-%E5%A5%BD%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
    <id>http://example.com/2022/12/13/%E5%AE%9D%E8%97%8F%E5%90%88%E9%9B%86-%E5%A5%BD%E7%AB%99%E6%8E%A8%E8%8D%90/</id>
    <published>2022-12-13T12:35:55.000Z</published>
    <updated>2022-12-20T12:17:23.791Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><p>为了方便查找部分常用网站以及考虑到能在不同设备上找到这些网站。</p><h2 id="艺术设计类网站"><a href="#艺术设计类网站" class="headerlink" title="艺术设计类网站"></a>艺术设计类网站</h2><div class="note info modern"><p>艺术设计类网站</p></div><p><a href="https://www.behance.net/">Behane</a>一个世界级的设计师灵感网站<br><a href="https://www.zcool.com.cn/">站酷</a>国内的设计灵感分享网站<br><a href="https://huaban.com/login">花瓣</a> 同上国内较大的艺术插画设计分享网站<br><a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">阿里巴巴矢量图标库</a>优质图标获取<br><a href="https://www.pexels.com/zh-cn/">pexels</a>相当不错的摄影图片素材网站，简约方便<br><a href="https://www.pinterest.jp/">pinteresst</a>拥有大量图片的素材网站，类型丰富，需翻墙<br><a href="https://igoutu.cn/illustrations">ouch</a>矢量插画素材网站，情形脱俗<br><a href="https://unsplash.com/">Unsplash</a> 摄影素材网站<br><a href="[The Stocks 3 | Best royalty free stock photos, videos, mockups, icons and fonts!](https://thestocks.im/">The Stocks</a>)设计素材整合网站，需要梯子<br><a href="http://zhongguose.com/#xinglan">中国色</a>很简约直观的颜色网站<br><a href="https://mixkit.co/">mixkit</a>视频素材网站，包括音效，需翻墙<br><a href="https://www.goto-mars.com/people/aLYqyNvYvd">旁门左道导航</a>虽然起家于PPT，但也是个很好的艺术设计网站导航<br><a href="http://www.stickpng.com/">sticks png</a>免扣素材网站，需翻墙<br><a href="https://pngimg.com/">pngimg</a>同样是免扣素材网站，类型多<br><a href="https://wallhaven.cc/">wallhaven</a>很不错的壁纸网站，清晰度可以选择并且免费下载，甚至包括4k图片<br><a href="https://33.agilestudio.cn/">33台词</a>根据台词找电影片段<br><a href="https://www.ear0.com/">耳聆网</a>声音素材<br><a href="https://www.lookae.com/">lookAE</a>PR/AE模板很多但是没有分类</p><h2 id="影视动漫网站"><a href="#影视动漫网站" class="headerlink" title="影视动漫网站"></a>影视动漫网站</h2><div class="note default simple"><p>影视动漫类网站</p></div><p><a href="https://ddys.tv/">低端影视</a>简约界面，超清资源，美中不足的是资源不多，都是近两年的热门。<br><a href="https://www.kpkuang.org/">看片狂人</a>相对不错的影视资源网站，但是都有这类网站的通病：要么速度慢，要么不清晰，这个至少广告少。<br><a href="https://www.libvio.com/">libvio</a>资源丰富，清晰度高，速度快，但是时不时会崩溃。<br><a href="https://www.meijuwo.net/">美剧窝</a>站如其名，中规中矩<br><a href="https://subhd.tv/zu/7">电波字幕组</a>美英剧字幕组良心资源，或许站点会换<br><a href="https://www.hoho.tv/">小宝影视</a>海外华人影视推荐，资源目前来看算很丰富的了，速度清晰度都无可挑剔。</p><p><a href="http://zikeke8.com/">紫可可</a>动漫网站，资源算丰富，但是不保证清晰度高，大部分不错<br><a href="https://www.copymanga.site/">拷贝漫画</a>优秀的漫画资源网站，相当优秀<br><a href="https://www.acgbox.link/#term-155">ACG盒子</a>ACG类资源整合网站，包括漫画、动漫、轻小说游戏等相关资源网站，甚至还包括某些不可告人的秘密。</p><h2 id="游戏MOD模拟器类"><a href="#游戏MOD模拟器类" class="headerlink" title="游戏MOD模拟器类"></a>游戏MOD模拟器类</h2><div class="note success simple"><p>游戏MOD模拟器类</p></div><p><a href="https://www.op.gg/champions">OP.gg</a>LOL资料网站<br><a href="https://www.nexusmods.com/">NEXUS MODS</a> 全球最大mod资源网站，需翻墙<br><a href="http://www.xiaoviemc.vip/">小vie的日常</a> 一位大佬的游戏模拟器博客分享网站<br>XXXX520相当多的资源游戏资源分享，包含switch模拟器资源。<br><a href="http://43.129.165.218/">某淘宝店家平台</a> 页面简陋，资源中规中矩<br><a href="https://rutracker.org/forum/index.php">Rutrackerorg</a>知名俄罗斯盗版资源网站,需翻墙</p><h2 id="神奇の妙妙工具"><a href="#神奇の妙妙工具" class="headerlink" title="神奇の妙妙工具"></a>神奇の妙妙工具</h2><div class="note primary modern"><p>神奇の妙妙工具</p></div><p><a href="https://greasyfork.org/zh-CN">Greasy Fork</a>插件资源网站<br><a href="https://dash.ibcn.space/user">IBCN</a>还不错的梯子，就是最近价格有点高了<br><a href="https://ikuuu.ltd/">IKUUU</a>目前用的，不错<br><a href="https://bbs.tampermonkey.net.cn/forum.php">油猴中文网</a> 之前刷课插件大神自己弄的脚本网站，虽然成立了不到两年，但是未来可期<br><a href="https://bbs.tampermonkey.net.cn/forum.php">炫猿</a> 相当多种类资源的导航，无敌<br><a href="https://www.tboxn.com/">Tbox导航</a>感觉还不错的导航，资源也很全面<br><a href="http://dd.pandownload.top/index.htm">Pandownload</a>网盘下载资源</p><h2 id="路漫漫其修远兮"><a href="#路漫漫其修远兮" class="headerlink" title="路漫漫其修远兮"></a>路漫漫其修远兮</h2><div class="note success modern"><p>学海？苦海！</p></div><p><a href="https://wantwords.net/">反向词典</a> 清华大佬开发的万词王新版<br><a href="http://dir.scmor.com/">SCMOR</a> 学术资料搜索导航，希望以后能经常用到<br><a href="http://www.pac8.top/#/recharge">酷喵题库</a>很好用的题库，简单便宜主要是搜的算是最全面的了<br>Zlibrary 全球最大电子图书馆，目前垮台了。</p><h2 id="编程类"><a href="#编程类" class="headerlink" title="编程类"></a>编程类</h2><div class="note success flat"><p>编程相关</p></div><h3 id="游戏引擎类"><a href="#游戏引擎类" class="headerlink" title="游戏引擎类"></a>游戏引擎类</h3><p><a href="https://docs.unrealengine.com/5.0/zh-CN/">虚幻官方文档</a> 基础文档，必看但是肯定是不够的<br><a href="https://docs.unrealengine.com/5.0/zh-CN/">CgGo</a>虚幻素材资源网站，相对还算不错<br><a href="https://docs.unrealengine.com/5.0/zh-CN/">mixamo</a>人物骨骼动画，基本动作都有，需翻墙<br><a href="https://sketchfab.com/store">Sketchfab</a>3d模型购买网站，模型确实全呀，就是好的都太贵了，记得使用E盘的小工具<br><a href="https://quixel.com/megascans/home">Quixel</a> 贴图素材，巨无敌清晰，需翻墙。</p><h3 id="通用资源"><a href="#通用资源" class="headerlink" title="通用资源"></a>通用资源</h3><p><a href="https://algo.itcharge.cn/">算法通关手册</a>北航大佬的力扣算法学习单，以python为主<br><a href="https://csdiy.wiki/">CS自学指南</a>北大大佬的计算机学习指南，门槛相对较高，希望以后我能看得懂吧。<br><a href="https://summer-ospp.ac.cn/#/homepage?diff=%E5%9F%BA%E7%A1%80%2FBasic">开源之夏</a>中科院软件所的项目社区活动，感觉挺牛B的，就是我有点看不懂。<br><a href="https://visualgo.net/en">VisualGo</a>数据结构模型实现展示<br><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">DSV</a>同上<br><a href="https://c.runoob.com/">菜鸟工具</a>小工具导航，如CSS颜色代码对照，进制转换啥的，挺全面的。<br><a href="https://www.byhy.net/">白月黑羽</a>一位大神的在线学习网站，主要是Python，也有MySql等其他的<br><a href="https://www.writebug.com/">Write—Bug</a>项目共享学习网站<br><a href="https://www.code-nav.cn/resources">编程导航</a>鱼皮大佬的编程资源分享网站<br><a href="https://www.sqlfather.com/">SQL之父</a>鱼皮大佬的SQL数据模拟生成器<br><a href="https://mofanpy.com/tutorials/python-basic/interactive-python/">莫烦Python</a>大佬的交互式学习Python网站<br><a href="http://jyywiki.cn/OS/2022/">操作系统设计与实现</a>南京大学蒋炎岩老师的课，我觉得是国内课堂的天花板，理论与实践的结合堪称一绝，只可惜没有前置知识听了一半听不下去了，希望以后能补回来。<br><a href="[【Qt】Qt6系列教程汇总_沧海一笑-dj的博客-CSDN博客_qt6教程](https://blog.csdn.net/dengjin20104042056/article/details/115174639?ops_request_misc=%7B%22request%5Fid%22%3A%22165664613416782395339126%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=165664613416782395339126&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-115174639-null-null.142^v29^control,185^v2^control&amp;utm_term=qt6&amp;spm=1018.2226.3001.4187">QT6教程CSDN</a>)大佬分享的QT六学习汇总<br><a href="[QWidgetDemo: Qt编写的一些开源的demo，支持Qt4、Qt5、Qt6，支持任意系统，预计会有100多个，一直持续更新完善，代码简洁易懂注释详细，每个都是独立项目，非常适合初学者，代码随意传播使用，拒绝打赏和捐赠，欢迎留言评论！ (gitee.com">QtDemo</a>](<a href="https://gitee.com/feiyangqingyun/QWidgetDemo))大佬写的QtDemo分享">https://gitee.com/feiyangqingyun/QWidgetDemo))大佬写的QtDemo分享</a><br><a href="[Dashboard - EdClub (typingclub.com">EdClub</a>](<a href="https://www.typingclub.com/sportal/))打字练习，相当好一步一步入门，有机会多练练">https://www.typingclub.com/sportal/))打字练习，相当好一步一步入门，有机会多练练</a><br><a href="https://www.educoder.net/shixuns">头歌实践平台</a>感觉还不错的实验模拟平台<br><a href="https://chat.openai.com/auth/login">ChatGPT</a>AI聊天，用的时候记得开无痕浏览用3237那个号，需翻墙</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;初衷&quot;&gt;&lt;a href=&quot;#初衷&quot; class=&quot;headerlink&quot; title=&quot;初衷&quot;&gt;&lt;/a&gt;初衷&lt;/h2&gt;&lt;p&gt;为了方便查找部分常用网站以及考虑到能在不同设备上找到这些网站。&lt;/p&gt;
&lt;h2 id=&quot;艺术设计类网站&quot;&gt;&lt;a href=&quot;#艺术设计类网站</summary>
      
    
    
    
    <category term="资源合集" scheme="http://example.com/categories/%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/"/>
    
    
    <category term="资源分享" scheme="http://example.com/tags/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>外挂标签配置</title>
    <link href="http://example.com/2022/12/12/hexo%E9%85%8D%E7%BD%AE-%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/12/12/hexo%E9%85%8D%E7%BD%AE-%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E9%85%8D%E7%BD%AE/</id>
    <published>2022-12-12T11:36:12.000Z</published>
    <updated>2022-12-12T11:46:58.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="外挂标签设置"><a href="#外挂标签设置" class="headerlink" title="外挂标签设置"></a>外挂标签设置</h1><p>配置1<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;</span><br><span class="line">默认 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><div class="note simple"><p>默认 提示块标籤</p></div></p><div class="note default simple"><p>default 提示块标籤</p></div><div class="note primary simple"><p>primary 提示块标籤</p></div><div class="note success simple"><p>success 提示块标籤</p></div><div class="note info simple"><p>info 提示块标籤</p></div><div class="note warning simple"><p>warning 提示块标籤</p></div><div class="note danger simple"><p>danger 提示块标籤</p></div><p>配置2<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;</span><br><span class="line">默认 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br><div class="note modern"><p>默认 提示块标籤</p></div></p><div class="note default modern"><p>default 提示块标籤</p></div><div class="note primary modern"><p>primary 提示块标籤</p></div><div class="note success modern"><p>success 提示块标籤</p></div><div class="note info modern"><p>info 提示块标籤</p></div><div class="note warning modern"><p>warning 提示块标籤</p></div><div class="note danger modern"><p>danger 提示块标籤</p></div><p>配置3：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;</span><br><span class="line">默认 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p><div class="note flat"><p>默认 提示块标籤</p></div><div class="note default flat"><p>default 提示块标籤</p></div><div class="note primary flat"><p>primary 提示块标籤</p></div><div class="note success flat"><p>success 提示块标籤</p></div><div class="note info flat"><p>info 提示块标籤</p></div><div class="note warning flat"><p>warning 提示块标籤</p></div><div class="note danger flat"><p>danger 提示块标籤</p></div><p>查询自<a href="https://www.huyw96.com/posts/1f69cb6c/">一位大佬的博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;外挂标签设置&quot;&gt;&lt;a href=&quot;#外挂标签设置&quot; class=&quot;headerlink&quot; title=&quot;外挂标签设置&quot;&gt;&lt;/a&gt;外挂标签设置&lt;/h1&gt;&lt;p&gt;配置1&lt;br&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="Blog配置" scheme="http://example.com/categories/Blog%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(第一章)</title>
    <link href="http://example.com/2022/12/12/408-%E8%AE%A1%E7%BD%91/"/>
    <id>http://example.com/2022/12/12/408-%E8%AE%A1%E7%BD%91/</id>
    <published>2022-12-12T05:00:38.000Z</published>
    <updated>2022-12-12T14:37:18.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络（湖科大教书匠版）"><a href="#计算机网络（湖科大教书匠版）" class="headerlink" title="计算机网络（湖科大教书匠版）"></a><strong>计算机网络</strong>（湖科大教书匠版）</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="1-2概述"><a href="#1-2概述" class="headerlink" title="1.2概述"></a>1.2概述</h3><ul><li><p>ISP-因特网服务提供者，因特网通过ISP连接</p></li><li><p>因特网标准化工作</p></li><li><p>因特网的组成：</p><p>边缘部分：所有连接在因特网的主机组成，这部分是用户直接使用，用来进行通信和资源共享。<br>核心部分：由大量网络和连接这些网络的路由器组成，这部分是为边缘部分提供服务的。</p></li><li><p>网络、互联网和因特网：</p><p>网络有若干个节点和连接这些节点的链路组成</p><p>多个网络通过路由器互连起来构成了互联网</p><p>因特网是世界上最大的互联网络</p></li></ul><h3 id="1-3-三种交换：电路交换、分组交换、报文交换"><a href="#1-3-三种交换：电路交换、分组交换、报文交换" class="headerlink" title="1.3 三种交换：电路交换、分组交换、报文交换"></a>1.3 三种交换：电路交换、分组交换、报文交换</h3><ul><li><p>电路交换：</p><p>电话交换机接通电话的方式称为电路交换</p><p>三个步骤：1.建立连接（分配通信资源）2.通话（一直占用通信资源）3.释放连接（归还通信资源）</p><p>用于传输计算机数据时效率低</p></li><li><p>分组交换：</p><p>在分组交换中没有专用的电路来传输数据。相反，我们可以通过添加一个标头，在数据准备好的任何时候发送一块数据，它就是分组或数据包（packet）。标头里包含了数据包的目标地址。</p><p>分组交换网络由终端、链路和分组交换机组成。</p></li><li><p>三种交换的对比</p><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208150426666.png" alt="image-20221208150426666" style="zoom:200%;"></p></li></ul><h3 id="1-4计算机网络定义和分类"><a href="#1-4计算机网络定义和分类" class="headerlink" title="1.4计算机网络定义和分类"></a>1.4计算机网络定义和分类</h3><ul><li><p>计算机网络的定义：</p><p>计算机网络主要是由一些通用的、可编程的硬件互连而成的，而这些硬件并非专门用来实现某一特等目的。这些可编程的硬件能用来传送多种不同类型的数据，并能支持广泛的和日益增长的应用。</p></li><li><p>计算机网络的分类可按交换技术、使用者、传输介质分类</p></li><li><p>覆盖范围分类：广域网WAN、城域网MAN、局域网LAN、个域网PAN</p></li></ul><h3 id="1-5计算机网络的性能指标"><a href="#1-5计算机网络的性能指标" class="headerlink" title="1.5计算机网络的性能指标"></a>1.5计算机网络的性能指标</h3><p>​    比特：计算机数据量的单位，8bit = 1 Byte字节，KB = 2^10B</p><p>​    速率：链接在计算机网络上的主机在数字信道上传输比特的速率也称为比特率或数据率，kb\s = 10^3 b\s(bps)</p><p>​    带宽：信号所包含的各种不同频率成分所占据的频率范围，用来表示网络通信线路能够传送数据的能力，因此表示在单位时间内从网络中的某一点到另一点所能通过·1的最高数据率；单位与速率单位相同</p><p>​    吞吐量：在单位时间内通过某个网络（或信道、接口）的数据量，受网络带宽或额定速率的限制，吞吐量常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能通过网络；吞吐量受网络带宽或额定速率限制</p><p>​    时延：发送时延、传播时延、处理时延构成</p><ul><li><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208152200902.png" alt="image-20221208152200902" style="zoom:200%;"></li><li><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208152212157.png" alt="image-20221208152212157" style="zoom:200%;"></p></li><li><p>​    处理时延往往不记</p></li></ul><p>时延带宽积：传播时延和带宽的乘积、链路的实验带宽积又称为以比特为单位的链路长度.</p><p>往返时间RTT：英特网信息不仅有单项交互而是双向交互的</p><p>利用率：信道利用率-表示信道百分之几的时间是被利用的，网络利用率-全网络的信道利用率加权，利用率并非越高越好，也不能使其太低</p><p>丢包率：分组丢失率，指在一定时间内，传输过程中丢失分组数量与总分组数量的比率，丢失原因：分组误码、网络阻塞</p><h3 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h3><p>​    常见计算机体系结构：</p><p>​    OSI体系结构<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208165624357.png" alt="image-20221208165624357"></p><p>​    TCP/IP体系结构  <img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208165830508.png" alt="image-20221208165830508"></p><p>每一层涉及协议</p><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221210171358239.png" alt="image-20221210171358239" style="zoom:200%;"></p><p>​    原理体系结构<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208171215034.png" alt="image-20221208171215034" style="zoom:200%;"></p><p>​    应用进程间基于往网络的通信过程：<strong>进程</strong>构建一个Http请求报文，往下每一层封装后发送给<strong>路由器</strong>，路由器往上解封装了解要发送地址，再往下封装发到接受方，<strong>接收方</strong>往上层层解封装再生成相应HTTP回应报文往下层层封装再发回去。</p><p>专用术语介绍：</p><ol><li><p>实体：任何可发送或接受信息的硬件或软件进程，对等实体-收发双方相同层次中的实体</p></li><li><p>协议：控制两个对等实体进行逻辑通信的规则和集合，协议三要素：语法、语义、同步</p></li><li><p>服务：在协议控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务，要实现本层协议还需要使用下一层所提供的服务，协议是<strong>水平的</strong>，服务是<strong>垂直的</strong>，下面的协议对上面的实体是<strong>透明的</strong></p></li><li><p>服务访问点—在同一系统中相邻两层的实体交换信息的逻辑接口，用于区分不同服务类型</p></li><li><p>协议数据单元PDU—对等层次之间传送的顺举报称为该层的协议数据单元；服务数据单元SDU-同一系统内层与层之间交换的数据包称为服务数据单元；多个SDU可以合成一个PDU，一个SDU也可以划分为几个PDU</p></li></ol><p>   ​    </p><p>​            <img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221208174058445.png" alt="image-20221208174058445" style="zoom:200%;"></p><p>习题总结：练习答案计算机体系结构-BACDC 时延-</p><p>绝大部分涉及计算机网络体系结构的真题都能做对，但是后续应该需要将OSI和TCP结构都得背下来才行。 时延类题需要注意发送时延指的是信号后端刚刚离开第一台主机的时间，传播时延指的是另一台主机收到信号末端的时间，n个信号发送时延乘n，传播时延不变。</p><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221210174137590.png" alt="image-20221210174137590"></p><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221211155125199.png" alt="image-20221211155125199" style="zoom:200%;"></p><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221211160339520.png" alt="image-20221211160339520"></p><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91/image-20221211161659428.png" alt="image-20221211161659428"></p><p>这题注意要加上头部分为1000个分组，因此发送时延为1M×8/100mbps = 80ms，至少经过两个交换机，每个分组发送时延为1000×8/100mbps = 0.08ms，总时间为80+0.08×2 = 80.16ms</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络（湖科大教书匠版）&quot;&gt;&lt;a href=&quot;#计算机网络（湖科大教书匠版）&quot; class=&quot;headerlink&quot; title=&quot;计算机网络（湖科大教书匠版）&quot;&gt;&lt;/a&gt;&lt;strong&gt;计算机网络&lt;/strong&gt;（湖科大教书匠版）&lt;/h1&gt;&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="考研复习" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%A4%8D%E4%B9%A0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(第二章)</title>
    <link href="http://example.com/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/"/>
    <id>http://example.com/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/</id>
    <published>2022-12-12T05:00:38.000Z</published>
    <updated>2022-12-16T09:38:44.867Z</updated>
    
    <content type="html"><![CDATA[<h2 id="j第二章"><a href="#j第二章" class="headerlink" title="j第二章"></a>j第二章</h2><h3 id="2-1物理层的基本概念"><a href="#2-1物理层的基本概念" class="headerlink" title="2.1物理层的基本概念"></a>2.1物理层的基本概念</h3><p>​    物理层协议主要任务：机械特性-指明接口所用接线器的形状和尺寸、引脚数目和排序、固定和锁定装置；电气特效-指明在接口电缆的各条线上出现的电压范围；功能特性-指明某条线上出现的某一电平表示何种意义；过程特性-指明对于不同功能的各种可能事件的出现顺序。</p><h3 id="2-2物理层下面的传输媒体"><a href="#2-2物理层下面的传输媒体" class="headerlink" title="2.2物理层下面的传输媒体"></a>2.2物理层下面的传输媒体</h3><p>​    导引型传输媒体：同轴电缆、双绞线、光纤、电力线</p><p>​    非导引型传输媒体： 无线电波、微波、红外线、可见光</p><h3 id="2-3传输方式"><a href="#2-3传输方式" class="headerlink" title="2.3传输方式"></a>2.3传输方式</h3><p>​    串行传输-一次一比特传输，并行传输-一次多比特，成本高，计算机内部采用并行传输</p><p>​    同步传输-字节之间时间间隔固定，需要保证双方时钟同步<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221211165219604-16708371237401.png" alt="image-20221211165219604"></p><p>​    异步传输-字节之间异步，字节中每个比特仍然要同步</p><p>​    单向通信、双向交替（半双工）通信、双向同时通信（全双工）</p><h3 id="2-4编码与调制"><a href="#2-4编码与调制" class="headerlink" title="2.4编码与调制"></a>2.4编码与调制</h3><p>​    码元-在使用时间域的波形表示数字信号时，代表不同离散数值的基本波形</p><p>​    不归零编码-整个码元时间内电平不会发生变化，需要额外的传输线传输时钟信号</p><p>​    归零编码-每个码元都会归零一次<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221211171012113-16708371237402.png" alt="image-20221211171012113"></p><p>​    曼彻斯特编码-马原中间时刻的跳变即表示时钟，又表示数据，数据是1，是0自行假设判断<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221211171102570-16708371237403.png" alt="image-20221211171102570"></p><p>​    差分曼彻斯特编码-跳变仅表示时钟，码元开始处电平是否发生变化表示数据，发生变化表示0，不发生变化表示1</p><p>​    数字基带信号：<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221211171342091-16708371237404.png" alt="image-20221211171342091"></p><p>混合调制</p><h3 id="2-5信道的极限容量"><a href="#2-5信道的极限容量" class="headerlink" title="2.5信道的极限容量"></a>2.5信道的极限容量</h3><p>​    为了避免码间串扰，码元传输速率是有上限的。<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221211172343769-16708371237405.png" alt="image-20221211172343769"></p><p>香农公式<img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221211172415943-16708371237406.png" alt="image-20221211172415943"></p><p>数据传输速率 = 波特率(码元传输速率)× 每个码元携带信息量</p><h3 id="习题总结："><a href="#习题总结：" class="headerlink" title="习题总结："></a>习题总结：</h3><p><img src="/2022/12/12/408-%E8%AE%A1%E7%BD%91-2/image-20221212150936848.png" alt="image-20221212150936848"></p><p>题目明显不是一看就能会了的水平了需要熟练掌握奈式准则和香农公式以及其他相关定义才行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;j第二章&quot;&gt;&lt;a href=&quot;#j第二章&quot; class=&quot;headerlink&quot; title=&quot;j第二章&quot;&gt;&lt;/a&gt;j第二章&lt;/h2&gt;&lt;h3 id=&quot;2-1物理层的基本概念&quot;&gt;&lt;a href=&quot;#2-1物理层的基本概念&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="考研复习" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%A4%8D%E4%B9%A0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>刷题日志</title>
    <link href="http://example.com/2022/12/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2022/12/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2022-12-10T12:32:22.000Z</published>
    <updated>2022-12-20T11:34:17.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2022年12月7日回文数字"><a href="#2022年12月7日回文数字" class="headerlink" title="2022年12月7日回文数字"></a>2022年12月7日<a href="https://www.luogu.com.cn/problem/P2010">回文数字</a></h2><p>我的答案：思路是将日期转化为数字在判断是否回文<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N  100005</span></span><br><span class="line"><span class="type">int</span> month[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">huiwen</span><span class="params">(string a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>,r = a.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[l]==a[r])</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">int</span> a,b,ans;</span><br><span class="line">   cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">   <span class="type">int</span> y1 = a/<span class="number">10000</span>,y2 = b/<span class="number">10000</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i =y1;i&lt;=y2;i++)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>;k&lt;=month[j];k++)</span><br><span class="line">        &#123;</span><br><span class="line">            string m,r;</span><br><span class="line">            <span class="keyword">if</span>(j&lt;<span class="number">10</span>)</span><br><span class="line">             m = <span class="string">&#x27;0&#x27;</span>+<span class="built_in">to_string</span>(j);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">             m =<span class="built_in">to_string</span>(j);</span><br><span class="line">            <span class="keyword">if</span>(k&lt;<span class="number">10</span>)</span><br><span class="line">            r = <span class="string">&#x27;0&#x27;</span>+<span class="built_in">to_string</span>(k);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            r = <span class="built_in">to_string</span>(k);</span><br><span class="line"></span><br><span class="line">            string time = <span class="built_in">to_string</span>(i)+m+r;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;stoi(time)&lt;&lt;&quot; &quot;;</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">huiwen</span>(time))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">stoi</span>(time)&gt;=a&amp;&amp;<span class="built_in">stoi</span>(time)&lt;=b)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout&lt;&lt;time&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                    ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   cout&lt;&lt;ans;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>大神解答：只通过模拟月日，判断是否条件范围内并且是回文即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N  100005</span></span><br><span class="line"><span class="type">int</span> i,j,n,m,a,b,c,sum,ans;</span><br><span class="line"><span class="type">int</span> s[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)<span class="comment">//枚举月和日 </span></span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=s[i];j++)</span><br><span class="line">        &#123;</span><br><span class="line">            c=(j%<span class="number">10</span>)*<span class="number">1000</span>+</span><br><span class="line">              (j/<span class="number">10</span>)*<span class="number">100</span>+</span><br><span class="line">              (i%<span class="number">10</span>)*<span class="number">10</span>+</span><br><span class="line">              (i/<span class="number">10</span>);<span class="comment">//算出前四位。</span></span><br><span class="line">            sum=c*<span class="number">10000</span>+i*<span class="number">100</span>+j;<span class="comment">//算出整个日期 </span></span><br><span class="line">            <span class="keyword">if</span> (sum&lt;n||sum&gt;m) <span class="keyword">continue</span>;</span><br><span class="line">            ans++;<span class="comment">//统计 </span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>奇怪的是我的答案和大神的部分输出输入都相同，不知为何会在结果上报错，有的可能是没考虑到闰年的情况。</p><h2 id="12月9日洛谷-P1036选数"><a href="#12月9日洛谷-P1036选数" class="headerlink" title="12月9日洛谷 P1036选数"></a>12月9日<a href="https://www.luogu.com.cn/problem/P1036">洛谷 P1036选数</a></h2><p>看到题其实思路很清晰，就是用DFS，但掌握的不是很好，想写一个用容器的，奈何水平有限呀。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N  100005</span></span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> a[<span class="number">25</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> a)</span><span class="comment">//判断是否为素数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">2</span>;i*i&lt;a;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a%i==<span class="number">0</span>)</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> sum,<span class="type">int</span> flag)</span><span class="comment">//x表示本次dfs开始的下标，sum表示当前总数和，flag控制顺序降重</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isprime</span>(sum))</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =flag;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">dfs</span>(x+<span class="number">1</span>,sum+a[i],i+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    cin&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月10日洛谷P1464-Function"><a href="#12月10日洛谷P1464-Function" class="headerlink" title="12月10日洛谷P1464 Function "></a>12月10日<a href="https://www.luogu.com.cn/problem/P1464">洛谷P1464 Function </a></h2><p>这题看着题目复杂其实只用写个递归函数即可，但是需要注意格式<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> W(x,y,z) (w_cnt[x][y][z] ? w_cnt[x][y][z] : w_cnt[x][y][z] = w(x,y,z))</span></span><br><span class="line"><span class="type">int</span> w_cnt[<span class="number">25</span>][<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">w</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=<span class="number">0</span> || b&lt;=<span class="number">0</span> || c&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(a &gt; <span class="number">20</span> || b &gt; <span class="number">20</span> || c &gt; <span class="number">20</span>) <span class="keyword">return</span> <span class="built_in">W</span>(<span class="number">20</span>,<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b &amp;&amp; b &lt; c) <span class="keyword">return</span> <span class="built_in">W</span>(a,b,c<span class="number">-1</span>)+<span class="built_in">W</span>(a,b<span class="number">-1</span>,c<span class="number">-1</span>) - <span class="built_in">W</span>(a,b<span class="number">-1</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">W</span>(a<span class="number">-1</span>,b,c)+<span class="built_in">W</span>(a<span class="number">-1</span>,b<span class="number">-1</span>,c)+<span class="built_in">W</span>(a<span class="number">-1</span>,b,c<span class="number">-1</span>) - <span class="built_in">W</span>(a<span class="number">-1</span>,b<span class="number">-1</span>,c<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="number">-1</span> &amp;&amp; b==<span class="number">-1</span> &amp;&amp; c==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">      cout&lt;&lt;<span class="string">&quot;w(&quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot;, &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot;, &quot;</span>&lt;&lt;c&lt;&lt;<span class="string">&quot;) = &quot;</span>&lt;&lt;<span class="built_in">w</span>(a,b,c)&lt;&lt;endl;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月11日P5534-【XR-3】等差数列"><a href="#12月11日P5534-【XR-3】等差数列" class="headerlink" title="12月11日P5534 【XR-3】等差数列"></a>12月11日<a href="https://www.luogu.com.cn/problem/P5534">P5534 【XR-3】等差数列</a></h2><p>题目很简单，但是我一开始读题读错了，以为是求等差数列的低级项，其实只用套数学公式即可<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">dengcha</span><span class="params">(<span class="type">long</span> <span class="type">long</span>  a,<span class="type">long</span> <span class="type">long</span> cnt,<span class="type">long</span> <span class="type">long</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="built_in">return</span> (<span class="built_in">dengcha</span>(a+d,cnt<span class="number">-1</span>,d));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">long</span> <span class="type">long</span> a,b,c;</span><br><span class="line">   cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">   <span class="type">int</span> d = b-a;</span><br><span class="line">   <span class="comment">//cout&lt;&lt;dengcha(a,c,d)&lt;&lt;endl;</span></span><br><span class="line">   <span class="type">long</span> <span class="type">long</span> ans = (<span class="built_in">dengcha</span>(a,c,d)+a)*c/<span class="number">2</span>;</span><br><span class="line">   cout&lt;&lt;ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="P1192-台阶问题"><a href="#P1192-台阶问题" class="headerlink" title="P1192 台阶问题"></a><a href="https://www.luogu.com.cn/problem/P1192">P1192 台阶问题</a></h2><p>同样是一看就有思路的题，经典动态规划题目，就是多了个取模的操作<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n,k;</span><br><span class="line">  cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">  <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">100000</span>)</span></span>;</span><br><span class="line">  dp[<span class="number">0</span>] = dp[<span class="number">1</span>] = <span class="number">1</span>;<span class="comment">//动态规划边界条件</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j =<span class="number">1</span>;j&lt;=k;j++)<span class="comment">//可以选择迈开的步数是1~k</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=j) <span class="comment">//楼梯阶数大等于步数才能算一次</span></span><br><span class="line">        dp[i] = (dp[i]+dp[i-j])%<span class="number">100003</span>;<span class="comment">//这一层是由上一层跨1，2，。。。，j步到的，</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;dp[n]%<span class="number">100003</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月12日P1025-NOIP2001-提高组-数的划分"><a href="#12月12日P1025-NOIP2001-提高组-数的划分" class="headerlink" title="12月12日P1025 [NOIP2001 提高组] 数的划分"></a>12月12日<a href="https://www.luogu.com.cn/problem/P1025">P1025 [NOIP2001 提高组] 数的划分</a></h2><p>有点难度，但感觉之前在leecode上做过，我用了dfs，看了大佬的做法应该还可以用动态规划<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k,sum;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> k,<span class="type">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line">        sum++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=t/k;++i) <span class="built_in">dfs</span>(i,k<span class="number">-1</span>,t-i);<span class="comment">//剪枝</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,k,n);</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月13日P4994-终于结束的起点"><a href="#12月13日P4994-终于结束的起点" class="headerlink" title="12月13日P4994 终于结束的起点"></a>12月13日<a href="https://www.luogu.com.cn/problem/P4994#submit">P4994 终于结束的起点</a></h2><p>这题思路也不算太难，就是用求斐波那契数列再加个取模的操作，需要注意的是要用long long，否则会溢出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="function">vector&lt;<span class="type">long</span> <span class="type">long</span>&gt; <span class="title">fb</span><span class="params">(<span class="number">10000002</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">f</span><span class="params">(<span class="type">long</span> <span class="type">long</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fb[i]) <span class="keyword">return</span> fb[i];</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">0</span>||i==<span class="number">1</span>) <span class="keyword">return</span> fb[i] = <span class="number">1</span>%x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> fb[i] =(<span class="built_in">f</span>(i<span class="number">-1</span>)+<span class="built_in">f</span>(i<span class="number">-2</span>))%x;<span class="comment">//斐波那契数列多加了个取模</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> i =<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">while</span>(<span class="built_in">f</span>(i)!=<span class="number">0</span>||<span class="built_in">f</span>(i+<span class="number">1</span>)!=<span class="number">1</span>)</span><br><span class="line">     i++;</span><br><span class="line">    cout&lt;&lt;i+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月15日P1003-NOIP2011-提高组-铺地毯"><a href="#12月15日P1003-NOIP2011-提高组-铺地毯" class="headerlink" title="12月15日P1003 [NOIP2011 提高组] 铺地毯"></a>12月15日<a href="https://www.luogu.com.cn/problem/P1003">P1003 [NOIP2011 提高组] 铺地毯</a></h2><p>一开始我打算使用模拟暴力解决，但是Memory Limit Exceeded超出内存限制了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> idx[<span class="number">10005</span>][<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(idx, <span class="number">-1</span>, <span class="built_in">sizeof</span>(idx));</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="type">int</span> a,b,g,k;</span><br><span class="line">       cin&gt;&gt;a&gt;&gt;b&gt;&gt;g&gt;&gt;k;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = a;i&lt;a+g;i++)</span><br><span class="line">       &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = b;j&lt;b+k;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                idx[i][j] = i+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    cout&lt;&lt;idx[x][y];</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看了大神的解答发现其实不用模拟，用四个数组分别记录左下角坐标a,b，横坐标g,纵坐标k,然后看x，y是否再这四个值生成的矩形范围内，是的话ans = 层数+1(ans初始值为-1)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> idx[<span class="number">10005</span>][<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[n],b[n],g[n],k[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;g[i]&gt;&gt;k[i];  <span class="comment">//记录每一层的数据</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="type">int</span> ans =<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=a[i]&amp;&amp;y&gt;=b[i]&amp;&amp;x&lt;=a[i]+g[i]&amp;&amp;y&lt;=b[i]+k[i])<span class="comment">//如果在这个矩形范围内</span></span><br><span class="line">        ans = i+<span class="number">1</span>;</span><br><span class="line">    &#125;    </span><br><span class="line">   cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12月16日P1067-NOIP2009-普及组-多项式输出"><a href="#12月16日P1067-NOIP2009-普及组-多项式输出" class="headerlink" title="12月16日P1067 [NOIP2009 普及组] 多项式输出"></a>12月16日<a href="https://www.luogu.com.cn/problem/P1067">P1067 [NOIP2009 普及组] 多项式输出</a></h2><p>思路很简单，就是模拟，但是要考虑几种特殊情况如-1和1的情况。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,x;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =n;i&gt;=<span class="number">0</span>;i--)<span class="comment">//注意要大于等于0</span></span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=n&amp;&amp;x&gt;<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;+&quot;</span>;<span class="comment">//是首位的话不加+号</span></span><br><span class="line">            <span class="keyword">if</span>(x&gt;<span class="number">1</span>||x&lt;<span class="number">-1</span>||i==<span class="number">0</span>) cout&lt;&lt;x;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">-1</span>&amp;&amp;i) cout&lt;&lt;<span class="string">&quot;-&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;x^&quot;</span>&lt;&lt;i;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;x&quot;</span>;<span class="comment">//特殊情况</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月17日P1328-NOIP2014-提高组-生活大爆炸版石头剪刀布"><a href="#12月17日P1328-NOIP2014-提高组-生活大爆炸版石头剪刀布" class="headerlink" title="12月17日P1328 [NOIP2014 提高组] 生活大爆炸版石头剪刀布"></a>12月17日<a href="https://www.luogu.com.cn/problem/P1328">P1328 [NOIP2014 提高组] 生活大爆炸版石头剪刀布</a></h2><p>模拟就完事了，但是麻烦的是得分数组需要列举出来，直接抄的大佬的了<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> vs[<span class="number">5</span>][<span class="number">5</span>] = &#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;&#125;; <span class="comment">//得分表的处理 </span></span><br><span class="line"><span class="type">int</span> n,na,nb;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;na&gt;&gt;nb;</span><br><span class="line"><span class="type">int</span> a[na],b[nb];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;na;i++)</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;nb;i++)</span><br><span class="line">cin&gt;&gt;b[i];</span><br><span class="line"><span class="type">int</span> x,y =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    x+=vs[a[i%na]][b[i%nb]];<span class="comment">//由于按照数组循环所以取模</span></span><br><span class="line">    y+=vs[b[i%nb]][a[i%na]];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br></pre></td></tr></table></figure></p><h2 id="12月18日P1563-NOIP2016-提高组-玩具谜题"><a href="#12月18日P1563-NOIP2016-提高组-玩具谜题" class="headerlink" title="12月18日P1563 [NOIP2016 提高组] 玩具谜题"></a>12月18日<a href="https://www.luogu.com.cn/problem/P1563">P1563 [NOIP2016 提高组] 玩具谜题</a></h2><p>还是很有难度的，一开始想写双向链表了但是发现多少点忘了这些东西了，但是看了看题解没想到其实不用那么复杂，但是这个逆时针的写法确实还是没怎么遇到过。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    vector&lt;string&gt;a;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string c;</span><br><span class="line">        <span class="type">int</span> d;</span><br><span class="line">        cin&gt;&gt;d&gt;&gt;c;</span><br><span class="line">        a.<span class="built_in">push_back</span>(c);</span><br><span class="line">        b.<span class="built_in">push_back</span>(d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> point=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">       </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(b[point]!=x)<span class="comment">//观察归规律，如果方向和左右一样就是顺时针，否则为逆时针</span></span><br><span class="line">        point = (point+y)%n;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        point =(point-y%n+n)%n;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;a[point];</span><br></pre></td></tr></table></figure></p><h2 id="12月19日P1042-NOIP2003-普及组-乒乓球"><a href="#12月19日P1042-NOIP2003-普及组-乒乓球" class="headerlink" title="12月19日P1042 [NOIP2003 普及组] 乒乓球"></a>12月19日<a href="https://www.luogu.com.cn/problem/P1042">P1042 [NOIP2003 普及组] 乒乓球</a></h2><p>模拟，但是一次性读入大量数据确实是个盲点，得好好记一下<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> str[<span class="number">1000010</span>];<span class="comment">//用vector不方便一次性读入大量数据</span></span><br><span class="line"><span class="type">int</span> cnt =<span class="number">0</span>;<span class="comment">//记录总共有多少数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==<span class="string">&#x27;W&#x27;</span>) a++;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==<span class="string">&#x27;L&#x27;</span>) b++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((a&gt;=n||b&gt;=n)&amp;&amp;<span class="built_in">abs</span>(a-b)&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">            a=b=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新的一轮刚开始，或上一局没有打完</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;ch&amp;&amp;ch!=<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;W&#x27;</span>||ch==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">          str[cnt++]=ch;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">show</span>(<span class="number">11</span>);</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">show</span>(<span class="number">21</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="12月20日P1179-NOIP2010-普及组-数字统计"><a href="#12月20日P1179-NOIP2010-普及组-数字统计" class="headerlink" title="12月20日P1179 [NOIP2010 普及组] 数字统计"></a>12月20日<a href="https://www.luogu.com.cn/problem/P1179">P1179 [NOIP2010 普及组] 数字统计</a></h2><p>入门题，很简单直接c++ 字符串count秒了<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> m,n;</span><br><span class="line">   cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">   <span class="type">int</span> ans =<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=m;i&lt;=n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">auto</span> a = <span class="built_in">to_string</span>(i);</span><br><span class="line">       <span class="type">int</span> x = <span class="built_in">count</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),<span class="string">&#x27;2&#x27;</span>);</span><br><span class="line">       ans+=x;</span><br><span class="line">   &#125;</span><br><span class="line">   cout&lt;&lt;ans;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2022年12月7日回文数字&quot;&gt;&lt;a href=&quot;#2022年12月7日回文数字&quot; class=&quot;headerlink&quot; title=&quot;2022年12月7日回文数字&quot;&gt;&lt;/a&gt;2022年12月7日&lt;a href=&quot;https://www.luogu.com.cn/</summary>
      
    
    
    
    <category term="刷题" scheme="http://example.com/categories/%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="洛谷" scheme="http://example.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
    <category term="刷题" scheme="http://example.com/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="苦海" scheme="http://example.com/tags/%E8%8B%A6%E6%B5%B7/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>博客修改记录</title>
    <link href="http://example.com/2022/12/08/%E5%8D%9A%E5%AE%A2%E4%BF%AE%E6%94%B9%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2022/12/08/%E5%8D%9A%E5%AE%A2%E4%BF%AE%E6%94%B9%E8%AE%B0%E5%BD%95/</id>
    <published>2022-12-08T12:52:46.000Z</published>
    <updated>2022-12-15T11:58:04.468Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客部分插件修改方法"><a href="#博客部分插件修改方法" class="headerlink" title="博客部分插件修改方法"></a>博客部分插件修改方法</h1><p>为了避免下次找不到某些功能怎么设置，记录一下搭建以及魔改博客的某些设置记录和使用方法</p><h2 id="个人卡片社交图标"><a href="#个人卡片社交图标" class="headerlink" title="个人卡片社交图标"></a>个人卡片社交图标</h2><p>在_config.butterfly.yml中设置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  iconfont icon-github: https://github.com/XuMeng313 || Github</span><br><span class="line">  fas fa-envelope: mailto:1635374917@qq.com || Email</span><br><span class="line">  iconfont icon-qq: http://wpa.qq.com/msgrd?v=3&amp;uin=1635374917&amp;site=qq&amp;menu=yes || QQ</span><br><span class="line">  iconfont icon-weixin: https://s2.loli.net/2022/12/06/cSEDBYs9g4fH2ni.png ||微信</span><br></pre></td></tr></table></figure><p>更改具体配置到F:\MyBlog\themes\butterfly\source\css\icon.css更改具体图标样式大小颜色等</p><h2 id="标题字体样式"><a href="#标题字体样式" class="headerlink" title="标题字体样式"></a>标题字体样式</h2><p>在_config.butterfly.yml如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">blog_title_font: </span><br><span class="line">  font_link:</span><br><span class="line">  font-family: &#x27;字体视界-点点墨体&#x27;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>或者是在F:\MyBlog\themes\butterfly\source\css\font.css中修改，具体不清楚是哪个起了效果</p><h2 id="页面加载动画"><a href="#页面加载动画" class="headerlink" title="页面加载动画"></a>页面加载动画</h2><p>在_config.butterfly.yml中有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Loading Animation (加載動畫)</span><br><span class="line">preloader:</span><br><span class="line">  enable: true</span><br><span class="line">  # source</span><br><span class="line">  # 1. fullpage-loading</span><br><span class="line">  # 2. pace (progress bar)</span><br><span class="line">  source: 1</span><br><span class="line">  # pace theme (see https://codebyzach.github.io/pace/)</span><br><span class="line">  pace_css_url: </span><br><span class="line">    url(/css/loading_bar.css)</span><br></pre></td></tr></table></figure><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>修改站点配置文件<code>_config.yml</code>，默认语言是 en 。<br>主题支持三种语言：</p><ul><li>default(en)</li><li>zh-CN (简体中文)</li><li>zh-TW (繁体中文)</li></ul><h2 id="网页背景特效"><a href="#网页背景特效" class="headerlink" title="网页背景特效"></a>网页背景特效</h2><p>在__config.butterfly.yml中修改，分为动态彩带，静态彩带</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: false  #設置是否每次點擊都更換彩带</span><br><span class="line">  mobile: false # false 手機端不顯示 true 手機端顯示</span><br></pre></td></tr></table></figure><p><a href="https://fastly.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-canvas-ribbon.png">  </a></p><h2 id="个人卡片背景更换"><a href="#个人卡片背景更换" class="headerlink" title="个人卡片背景更换"></a>个人卡片背景更换</h2><p>在引入的source/custom.css文件中加入如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* 侧边栏个人信息图片卡片背景 */</span><br><span class="line">#aside-content&gt;.card-widget.card-info &#123;</span><br><span class="line">  background-image: url(https://s2.loli.net/2022/12/06/pQrWnEvd8DgIMmL.png);</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  background-attachment: inherit;</span><br><span class="line">  background-size: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若是动态渐变色则添加如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* #aside-content&gt;.card-widget.card-info &#123;</span></span><br><span class="line"><span class="comment">  background-image: url(https://source.fomal.cc/img/樱花.png);</span></span><br><span class="line"><span class="comment">  background-repeat: no-repeat;</span></span><br><span class="line"><span class="comment">  background-attachment: inherit;</span></span><br><span class="line"><span class="comment">  background-size: 100%;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">#aside-content &gt; .card-widget.card-info &#123;</span></span><br><span class="line"><span class="comment">    background: linear-gradient(</span></span><br><span class="line"><span class="comment">      -45deg, </span></span><br><span class="line"><span class="comment">      #ee0979,</span></span><br><span class="line"><span class="comment">      #4158D0,</span></span><br><span class="line"><span class="comment">      #C850C0,</span></span><br><span class="line"><span class="comment">      #FFCC70,</span></span><br><span class="line"><span class="comment">      #007991</span></span><br><span class="line"><span class="comment">    );</span></span><br><span class="line"><span class="comment">    box-shadow: 0 0 5px rgb(66, 68, 68);</span></span><br><span class="line"><span class="comment">    position: relative;</span></span><br><span class="line"><span class="comment">    background-size: 400% 400%;</span></span><br><span class="line"><span class="comment">    -webkit-animation: Gradient 10s ease infinite;</span></span><br><span class="line"><span class="comment">    -moz-animation: Gradient 10s ease infinite;</span></span><br><span class="line"><span class="comment">    animation: Gradient 10s ease infinite !important;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  @-webkit-keyframes Gradient &#123;</span></span><br><span class="line"><span class="comment">    0% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 0% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    50% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 100% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    100% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 0% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  @-moz-keyframes Gradient &#123;</span></span><br><span class="line"><span class="comment">    0% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 0% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    50% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 100% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    100% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 0% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  @keyframes Gradient &#123;</span></span><br><span class="line"><span class="comment">    0% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 0% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    50% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 100% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    100% &#123;</span></span><br><span class="line"><span class="comment">      background-position: 0% 50%;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  body &#123; /*卡片名字和签名本体*/</span></span><br><span class="line">    <span class="comment">/* position: relative;</span></span><br><span class="line"><span class="comment">    min-height: 100%;</span></span><br><span class="line"><span class="comment">    background: var(--global-bg);</span></span><br><span class="line"><span class="comment">    color: #f1ecec;</span></span><br><span class="line"><span class="comment">    font-size: var(--global-font-size);</span></span><br><span class="line"><span class="comment">    font-family: -apple-system, BlinkMacSystemFont, &#x27;Segoe UI&#x27;, &#x27;Helvetica Neue&#x27;, Lato, Roboto, &#x27;PingFang SC&#x27;, &#x27;Microsoft YaHei&#x27;, sans-serif;</span></span><br><span class="line"><span class="comment">    line-height: 2;</span></span><br><span class="line"><span class="comment">    -webkit-tap-highlight-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="comment">&#125;  */</span></span><br></pre></td></tr></table></figure><p>网页其他元素更改都可以自己使用F12查看网页元素来修改添加到custom.css文件中即可</p><h2 id="和风天气"><a href="#和风天气" class="headerlink" title="和风天气"></a>和风天气</h2><p>在<a href="https://console.qweather.com/#/apps中设置相关天气样式后生成代码保存到F:\MyBlog\themes\butterfly\source\js\weather.js中">https://console.qweather.com/#/apps中设置相关天气样式后生成代码保存到F:\MyBlog\themes\butterfly\source\js\weather.js中</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">WIDGET = &#123;</span><br><span class="line">    &quot;CONFIG&quot;: &#123;</span><br><span class="line">      &quot;modules&quot;: <span class="string">&quot;01234&quot;</span>,</span><br><span class="line">      <span class="string">&quot;background&quot;</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tmpColor&quot;</span>: <span class="string">&quot;F38181&quot;</span>,</span><br><span class="line">      <span class="string">&quot;tmpSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;cityColor&quot;</span>: <span class="string">&quot;ff6a00&quot;</span>,</span><br><span class="line">      <span class="string">&quot;citySize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;aqiColor&quot;</span>: <span class="string">&quot;95E1D3&quot;</span>,</span><br><span class="line">      <span class="string">&quot;aqiSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;weatherIconSize&quot;</span>: <span class="string">&quot;24&quot;</span>,</span><br><span class="line">      <span class="string">&quot;alertIconSize&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">      <span class="string">&quot;padding&quot;</span>: <span class="string">&quot;10px 10px 10px 10px&quot;</span>,</span><br><span class="line">      <span class="string">&quot;shadow&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="string">&quot;language&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">      <span class="string">&quot;borderRadius&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fixed&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">      <span class="string">&quot;vertical&quot;</span>: <span class="string">&quot;top&quot;</span>,</span><br><span class="line">      <span class="string">&quot;horizontal&quot;</span>: <span class="string">&quot;left&quot;</span>,</span><br><span class="line">      <span class="string">&quot;left&quot;</span>: <span class="string">&quot;150&quot;</span>,</span><br><span class="line">      <span class="string">&quot;top&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">      <span class="string">&quot;key&quot;</span>: <span class="string">&quot;477fc87fb5fe48a0b17539feeb521225&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>将其引入到__config.butterfly.yml中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/font.css&quot;&gt;</span><br><span class="line">    - &lt;script src=&quot;https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0&quot;&gt;&lt;/script&gt;</span><br><span class="line">    - &lt;script async src=&quot;/js/weather.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/icon.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="本地搜索系统"><a href="#本地搜索系统" class="headerlink" title="本地搜索系统"></a>本地搜索系统</h2><ol><li><p>安装依赖，打开任务终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li></ol><p>​            2.修改配置文件<code>_config.yml</code>，添加如下代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure><p>​            3.在主题配置文件_config.butterfly.yml中修改以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">-  enable: false</span><br><span class="line">+  enable: true</span><br></pre></td></tr></table></figure><p>​            </p><h2 id="公告栏蔚蓝主题美化"><a href="#公告栏蔚蓝主题美化" class="headerlink" title="公告栏蔚蓝主题美化"></a>公告栏蔚蓝主题美化</h2><p>找到F:\MyBlog\themes\butterfly\layout\includes\widget\card_announcement.pug，复制如下代码,注意删去重复代码，优先保留自己原有的那一部分。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">if theme.aside.card_announcement.enable</span><br><span class="line">  .card-widget.card-announcement</span><br><span class="line">    .item-headline</span><br><span class="line">      i.fas.fa-bullhorn.card-announcement-animation</span><br><span class="line">      span= _p(&#x27;aside.card_announcement&#x27;)</span><br><span class="line">    .announcement_content!= theme.aside.card_announcement.content</span><br><span class="line">  .xpand(style=&#x27;height:200px;&#x27;)</span><br><span class="line">    canvas.illo(width=&#x27;800&#x27; height=&#x27;800&#x27; style=&#x27;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&#x27;)</span><br><span class="line">script(src=&#x27;https://npm.elemecdn.com/ethan4116-blog/lib/js/other/two-people/twopeople1.js&#x27;)</span><br><span class="line">script(src=&#x27;https://npm.elemecdn.com/ethan4116-blog/lib/js/other/two-people/zdog.dist.js&#x27;)</span><br><span class="line">script#rendered-js(src=&#x27;https://npm.elemecdn.com/ethan4116-blog/lib/js/other/two-people/twopeople.js&#x27;)</span><br><span class="line">style.</span><br><span class="line"> .card-widget.card-announcement &#123;</span><br><span class="line"> margin: 0;</span><br><span class="line"> align-items: center;</span><br><span class="line"> justify-content: center;</span><br><span class="line"> text-align: center;</span><br><span class="line"> &#125;</span><br><span class="line"> canvas &#123;</span><br><span class="line"> display: block;</span><br><span class="line"> margin: 0 auto;</span><br><span class="line"> cursor: move;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>来自<a href="https://tzy1997.com/">一位大佬的博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;博客部分插件修改方法&quot;&gt;&lt;a href=&quot;#博客部分插件修改方法&quot; class=&quot;headerlink&quot; title=&quot;博客部分插件修改方法&quot;&gt;&lt;/a&gt;博客部分插件修改方法&lt;/h1&gt;&lt;p&gt;为了避免下次找不到某些功能怎么设置，记录一下搭建以及魔改博客的某些设置记录和</summary>
      
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="修改记录" scheme="http://example.com/tags/%E4%BF%AE%E6%94%B9%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://example.com/2022/11/27/%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2022/11/27/%E6%B5%8B%E8%AF%95/</id>
    <published>2022-11-27T09:00:55.000Z</published>
    <updated>2022-12-02T02:43:59.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试这是一个测试"><a href="#测试这是一个测试" class="headerlink" title="测试这是一个测试"></a>测试这是一个测试</h1><p><img src="/2022/11/27/%E6%B5%8B%E8%AF%95/MyBlog\source\_posts\测试\1.jpg" alt></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;测试这是一个测试&quot;&gt;&lt;a href=&quot;#测试这是一个测试&quot; class=&quot;headerlink&quot; title=&quot;测试这是一个测试&quot;&gt;&lt;/a&gt;测试这是一个测试&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2022/11/27/%E6%B5%8B%E8%AF%95/MyBlo</summary>
      
    
    
    
    
    <category term="-测试输入" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95%E8%BE%93%E5%85%A5/"/>
    
  </entry>
  
</feed>
